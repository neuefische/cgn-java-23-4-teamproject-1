name: "Deploy App"
on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      - uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

    build-backend:
      runs-on: ubuntu-latest
      needs: build-frontend
      steps:
        - uses: actions/checkout@v4

        - uses: actions/download-artifact@v4
          with:
            name: frontend-build
            path: backend/src/main/resources/static/

        - name: Setup JDK
          uses: actions/setup-java@v4
          with:
            java-version: '21'
            distribution: 'temurin'
            cache: 'maven'

        - name: Build with Maven
          working-directory: backend
          run: mvn -B package --file backend/pom.xml

        - uses: actions/upload-artifact@v4
          with:
            name: app.jar
            path: backend/target/app.jar

  push-to-docker-hub:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: app.jar
          path: backend/target

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/app:latest
          context: .

  deploy-to-render:
    name: deploy-to-render
    runs-on: ubuntu-latest
    needs: push-to-docker-hub
    steps:
      - name: Trigger Render Deploy
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY }}

      
